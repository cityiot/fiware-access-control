# Copyright 2019 Tampere University
# This software was developed as a part of the CityIoT project: https://www.cityiot.fi/english
# This source code is licensed under the 3-clause BSD license. See license.txt in the repository root directory.
# Author(s): Mikko Nurminen <mikko.nurminen@tuni.fi>

# https://github.com/ging/fiware-idm/tree/master/extras/docker
# and
# https://github.com/Fiware/tutorials.PEP-Proxy/blob/master/docker-compose/orion.yml
#
# Docker Hub tags have been chosen to reflect FIWARE release 7.5.1 as specified in
# https://github.com/Fiware/catalogue/releases


version: "3.5"

services:
  quantumleap:
    image: smartsdk/quantumleap:${QL_VERSION:-0.6.2}
    depends_on:
      - cratedb
    environment:
      - CRATE_HOST=cratedb
      - USE_GEOCODING=False
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    deploy:
      replicas: ${QL_REPLICAS:-3}
      restart_policy:
        condition: any
      update_config:
        parallelism: 1
        delay: 1m
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8668/v2/version"]
      interval: 1m
      timeout: 30s
      retries: 3
    networks:
      - cityiot

  cratedb:
    image: crate:${CRATE_VERSION:-3.0.7}
    # ports:
      # - 8080:4200  # Admin UI
    environment:
      - MAX_MAP_COUNT=262144
      - ES_JAVA_OPTS="-Xms4g -Xmx4g"
      - CRATE_HEAP_SIZE=4g
    environment:
      - NODE_NAME={{.Service.Name}}-{{.Task.Slot}}
      - UNICAST_HOSTS=cratedb
    command: ["crate",
        "-Clicense.enterprise=false",
        "-Cgateway.expected_nodes=${EXPECTED_NODES:-1}",
        "-Cgateway.recover_after_nodes=${RECOVER_AFTER_NODES:-1}",
        "-Cgateway.recover_after_time=5m",
        "-Cdiscovery.zen.minimum_master_nodes=${MINIMUM_MASTER_NODES:-1}",
        "-Cnode.name=$${NODE_NAME}",
        "-Cdiscovery.zen.ping.unicast.hosts=$${UNICAST_HOSTS}",
        "-Cdiscovery.zen.ping_timeout=30s",
        "-Cnetwork.publish_host=_eth0_",
        "-Cnetwork.host=0.0.0.0",
        "-Ccluster.name=quantumleap",
        "-Chttp.cors.enabled=true",
        '-Chttp.cors.allow-origin="*"']
    deploy:
      endpoint_mode: dnsrr
      mode: global
      update_config:
        parallelism: 1
        delay: 30s
    volumes:
      - cratedata:/data
    networks:
      - cityiot

  redis:
    image: redis:${REDIS_VERSION:-5.0.3}
    volumes:
      - redisdata:/data
    networks:
      - cityiot

volumes:
  cratedata:
    external: true
  redisdata:
    external: true

networks:
  cityiot:
    external: true
    name: ${CITYIOT_NETWORK_NAME:-cityiot}
